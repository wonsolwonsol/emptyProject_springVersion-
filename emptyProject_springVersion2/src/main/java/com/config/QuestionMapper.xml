<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QuestionMapper">
<!-- Comment   -->
<!--  >select * from question_board_comment-->
<select id="questionComment" resultType="Question_Comments" parameterType="string">
select * from question_board_comment
where question_number = #{question_number} 
</select>

<select id="questionAll2" parameterType="PagingVO" resultType="Question">
<!-- 안선언니가 하신 페이징처리는 이클립스에서, 이 페이징처리의 경우 SQL 자체에서 일정량의 데이터만 뽑아오는 것 -->
<!-- PagingVO 사용합니다. -->
    SELECT *
        FROM (    SELECT ROWNUM RNUM, P.*
                FROM (    SELECT *
                        FROM question
                        ORDER BY REGDATE DESC ) P )
        WHERE RNUM BETWEEN #{start} AND #{last}
</select>
<select id="totalCount" resultType="int">
select count(*)
from question
</select>
<select id="questionAll" parameterType="hashmap" resultType="Question"> 
select * from question
</select>
<select id="questionRetrieve" parameterType="string" resultType="Question">
select * from question where question_number = #{question_number} 
</select>
<delete id="questionDelete" parameterType="int">
delete from question 
where question_number = #{question_number} 
</delete>
<delete id="questionCommentDelete" parameterType="int">
delete from question_board_comment
where comment_number = #{comment_number} 
</delete>
<insert id="questionCommentWrite" parameterType="Question_Comments"> 
insert into question_board_comment (
 question_number
, comment_number
, author
, comment_contents ) 
values ( #{question_number} 
,comment_number.NEXTVAL 
,#{author}
,#{comment_contents} ) 
</insert>

<!-- 질문 -->
<insert id="questionWriteSubmit" parameterType="Question">
insert into question (
	question_number
	,title
	,author
	,content 
	,regdate ) 
values (
	question_number.NEXTVAL
	,#{title}
	,#{author}
	,#{content} 
	,sysdate ) 
</insert>
<update id="questionUpdate" parameterType="Question">
update question
set title = #{title} 
	,content = #{content} 
where question_number = #{question_number} 
</update>

<delete id="questionAdminDelAll" parameterType="list">
delete from question
where question_number in 
<foreach close=")" separator="," open="(" collection="list" index="index" item="item"> #{item} </foreach>
</delete>

</mapper>